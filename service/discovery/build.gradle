plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'cloud.crosstraining.devstore'
description = 'Devstore discovery server'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
	archiveFileName = projectDir.absolutePath + '/app.jar'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	doFirst {
		def envFileName = System.getenv("ENV_FILE") ?: '.env'
		def envFile = file(envFileName)
		if (envFile.exists()) {
			envFile.eachLine { line ->
				def (key, value) = line.split('=')
				environment key, value
			}
		}
	}
}
